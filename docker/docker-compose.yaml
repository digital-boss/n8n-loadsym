version: '3.8'

volumes:
  postgres:
  n8n:
  redis:
  rabbitmq_data:
  rabbitmq_log:

x-n8n-shared: &n8n-shared
  restart: always
  image: docker.n8n.io/n8nio/n8n
  env_file:
    - env/n8n-common.env
  links:
    - postgres
    - redis
  volumes:
    - n8n:/home/node/.n8n
    - ./workflows:/workflows
  depends_on:
    redis:
      condition: service_healthy
    postgres:
      condition: service_healthy
    rabbitmq:
      condition: service_healthy

services:
  postgres:
    image: postgres:11
    restart: always
    env_file: env/postgres.env
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./init-data.sh:/docker-entrypoint-initdb.d/init-data.sh
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:6-alpine
    restart: always
    volumes:
      - redis:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 5s
      retries: 10

  rabbitmq:
    image: rabbitmq:3.12.4-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - rabbitmq_log:/var/log/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      timeout: 5s
      retries: 3

  n8n-main:
    <<: *n8n-shared
    environment:
      - INSTANCE_TYPE=main
    ports:
      - 5678:5678

  n8n-worker:
    <<: *n8n-shared
    environment:
      - INSTANCE_TYPE=worker
      - INSTANCE_NUM
    command: worker
    depends_on:
      - n8n-main
    profiles: ["replicated"]

  n8n-webhook:
    <<: *n8n-shared
    environment:
      - INSTANCE_TYPE=webhook
      - INSTANCE_NUM
    command: webhook
    depends_on:
      - n8n-main
    profiles: ["replicated"]

